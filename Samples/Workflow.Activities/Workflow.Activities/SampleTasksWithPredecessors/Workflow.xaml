<Activity mc:Ignorable="sap sap2010 sads" x:Class="Workflow.Activities.Sample_Tasks_With_Predecessors.Workflow" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="Workflow.Activities.Sample_Tasks_With_Predecessors.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.16.0.Design"
 xmlns:p="wf://workflow.windows.net/$Activities"
 xmlns:p1="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p2="wf://workflow.windows.net/$Current/$Activities/Workflow.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities.16.0</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities.16.0.Design</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.WorkflowServices.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Workflow.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="taskOneOutcome" />
      <Variable x:TypeArguments="x:Int32" Name="taskTwoOutcome" />
      <Variable x:TypeArguments="x:Int32" Name="taskThreeOutcome" />
      <Variable x:TypeArguments="x:String" Name="targetUser" />
      <Variable x:TypeArguments="x:Int32" Name="taskOneId" />
      <Variable x:TypeArguments="x:Int32" Name="taskTwoId" />
      <Variable x:TypeArguments="x:Int32" Name="taskThreeId" />
      <Variable x:TypeArguments="s:Guid" Name="taskListId" />
      <Variable x:TypeArguments="sco:Collection(x:Int32)" Name="taskPredecessorsIds" />
    </Sequence.Variables>
    <p:LookupWorkflowContextProperty DisplayName="Retrieve Initiator" sap2010:WorkflowViewState.IdRef="LookupWorkflowContextProperty_1" PropertyName="InitiatorUserId">
      <p:LookupWorkflowContextProperty.Result>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">targetUser</mca:CSharpReference>
        </OutArgument>
      </p:LookupWorkflowContextProperty.Result>
    </p:LookupWorkflowContextProperty>
    <p:GetTaskListId DisplayName="Retrieve Task List Id" sap2010:WorkflowViewState.IdRef="GetTaskListId_1">
      <p:GetTaskListId.Result>
        <OutArgument x:TypeArguments="s:Guid">
          <mca:CSharpReference x:TypeArguments="s:Guid">taskListId</mca:CSharpReference>
        </OutArgument>
      </p:GetTaskListId.Result>
    </p:GetTaskListId>
    <p:SingleTask Body="{x:Null}" DueDate="{x:Null}" TaskId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" DisplayName="Sample Task 01" sap2010:WorkflowViewState.IdRef="SingleTask_1" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue" OverdueReminderRepeat="1" OverdueRepeatTimes="1" PreserveIncompleteTasks="False" SendReminderEmail="True" Title="Workflow task 1" WaitForTaskCompletion="False" WaiveAssignmentEmail="False" WaiveCancelationEmail="False">
      <p:SingleTask.AssignedTo>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">targetUser</mca:CSharpValue>
        </InArgument>
      </p:SingleTask.AssignedTo>
      <p:SingleTask.Outcome>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">taskOneOutcome</mca:CSharpReference>
        </OutArgument>
      </p:SingleTask.Outcome>
      <p:SingleTask.RelatedContentLinkListId>
        <InArgument x:TypeArguments="s:Guid">
          <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p:GetCurrentListId />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListId>
      <p:SingleTask.RelatedContentLinkListItemId>
        <InArgument x:TypeArguments="s:Guid">
          <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p:GetCurrentItemGuid />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListItemId>
      <p:SingleTask.RelatedContentLinkListItemIntegerId>
        <InArgument x:TypeArguments="x:Int32">
          <p1:ExpressionContainerValue x:TypeArguments="x:Int32">
            <p:GetCurrentItemId />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListItemIntegerId>
      <p:SingleTask.TaskItemId>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">taskOneId</mca:CSharpReference>
        </OutArgument>
      </p:SingleTask.TaskItemId>
    </p:SingleTask>
    <p:SingleTask Body="{x:Null}" DueDate="{x:Null}" TaskId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" DisplayName="Sample Task 02" sap2010:WorkflowViewState.IdRef="SingleTask_2" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue" OverdueReminderRepeat="1" OverdueRepeatTimes="1" PreserveIncompleteTasks="False" SendReminderEmail="True" Title="Workflow task 2" WaitForTaskCompletion="False" WaiveAssignmentEmail="False" WaiveCancelationEmail="False">
      <p:SingleTask.AssignedTo>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">targetUser</mca:CSharpValue>
        </InArgument>
      </p:SingleTask.AssignedTo>
      <p:SingleTask.Outcome>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">taskTwoOutcome</mca:CSharpReference>
        </OutArgument>
      </p:SingleTask.Outcome>
      <p:SingleTask.RelatedContentLinkListId>
        <InArgument x:TypeArguments="s:Guid">
          <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p:GetCurrentListId />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListId>
      <p:SingleTask.RelatedContentLinkListItemId>
        <InArgument x:TypeArguments="s:Guid">
          <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p:GetCurrentItemGuid />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListItemId>
      <p:SingleTask.RelatedContentLinkListItemIntegerId>
        <InArgument x:TypeArguments="x:Int32">
          <p1:ExpressionContainerValue x:TypeArguments="x:Int32">
            <p:GetCurrentItemId />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListItemIntegerId>
      <p:SingleTask.TaskItemId>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">taskTwoId</mca:CSharpReference>
        </OutArgument>
      </p:SingleTask.TaskItemId>
    </p:SingleTask>
    <p:SingleTask Body="{x:Null}" DueDate="{x:Null}" TaskId="{x:Null}" AssignmentEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have a new task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" AssignmentEmailSubject="Task Assigned" CancelationEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;One of your tasks was canceled and deleted. You do not need to take any further action on that task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" CancelationEmailSubject="Task Canceled" CompletedStatus="Completed" ContentTypeId="0x0108003365C4474CAE8C42BCE396314E88E51F" DefaultTaskOutcome="0" DisplayName="Sample Task 03" sap2010:WorkflowViewState.IdRef="SingleTask_3" OutcomeFieldName="TaskOutcome" OverdueEmailBody="&lt;html&gt;&lt;body style='font-size:11pt;font-family:Segoe UI Light,sans-serif;color:#444444;'&gt;&lt;div&gt;&lt;span style='font-size:13.5pt'&gt;You have an &lt;/span&gt;&lt;span style='font-size:13.5pt;color:#ff3b3b;'&gt;overdue&lt;/span&gt;&lt;span style='font-size:13.5pt'&gt; task.&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" OverdueEmailSubject="Task Overdue" OverdueReminderRepeat="1" OverdueRepeatTimes="1" PreserveIncompleteTasks="False" SendReminderEmail="True" Title="Workflow task 3" WaitForTaskCompletion="False" WaiveAssignmentEmail="False" WaiveCancelationEmail="False">
      <p:SingleTask.AssignedTo>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">targetUser</mca:CSharpValue>
        </InArgument>
      </p:SingleTask.AssignedTo>
      <p:SingleTask.Outcome>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">taskThreeOutcome</mca:CSharpReference>
        </OutArgument>
      </p:SingleTask.Outcome>
      <p:SingleTask.RelatedContentLinkListId>
        <InArgument x:TypeArguments="s:Guid">
          <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p:GetCurrentListId />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListId>
      <p:SingleTask.RelatedContentLinkListItemId>
        <InArgument x:TypeArguments="s:Guid">
          <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
            <p:GetCurrentItemGuid />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListItemId>
      <p:SingleTask.RelatedContentLinkListItemIntegerId>
        <InArgument x:TypeArguments="x:Int32">
          <p1:ExpressionContainerValue x:TypeArguments="x:Int32">
            <p:GetCurrentItemId />
          </p1:ExpressionContainerValue>
        </InArgument>
      </p:SingleTask.RelatedContentLinkListItemIntegerId>
      <p:SingleTask.TaskItemId>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">taskThreeId</mca:CSharpReference>
        </OutArgument>
      </p:SingleTask.TaskItemId>
    </p:SingleTask>
    <p1:BuildCollection x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="BuildCollection`1_1">
      <p1:BuildCollection.Result>
        <OutArgument x:TypeArguments="sco:Collection(x:Int32)">
          <mca:CSharpReference x:TypeArguments="sco:Collection(x:Int32)">taskPredecessorsIds</mca:CSharpReference>
        </OutArgument>
      </p1:BuildCollection.Result>
    </p1:BuildCollection>
    <AddToCollection x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1">
      <AddToCollection.Item>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">taskOneId</mca:CSharpValue>
        </InArgument>
      </AddToCollection.Item>
      <InArgument x:TypeArguments="scg:ICollection(x:Int32)">
        <mca:CSharpValue x:TypeArguments="scg:ICollection(x:Int32)">taskPredecessorsIds</mca:CSharpValue>
      </InArgument>
    </AddToCollection>
    <AddToCollection x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2">
      <AddToCollection.Item>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">taskTwoId</mca:CSharpValue>
        </InArgument>
      </AddToCollection.Item>
      <InArgument x:TypeArguments="scg:ICollection(x:Int32)">
        <mca:CSharpValue x:TypeArguments="scg:ICollection(x:Int32)">taskPredecessorsIds</mca:CSharpValue>
      </InArgument>
    </AddToCollection>
    <p2:SetTaskPredecessorsActivity sap2010:WorkflowViewState.IdRef="SetTaskPredecessorsActivity_1">
      <p2:SetTaskPredecessorsActivity.PredecessorsIds>
        <InArgument x:TypeArguments="scg:ICollection(x:Int32)">
          <mca:CSharpValue x:TypeArguments="scg:ICollection(x:Int32)">taskPredecessorsIds</mca:CSharpValue>
        </InArgument>
      </p2:SetTaskPredecessorsActivity.PredecessorsIds>
      <p2:SetTaskPredecessorsActivity.WorkflowTaskId>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">taskThreeId</mca:CSharpValue>
        </InArgument>
      </p2:SetTaskPredecessorsActivity.WorkflowTaskId>
      <p2:SetTaskPredecessorsActivity.WorkflowTaskListId>
        <InArgument x:TypeArguments="s:Guid">
          <mca:CSharpValue x:TypeArguments="s:Guid">taskListId</mca:CSharpValue>
        </InArgument>
      </p2:SetTaskPredecessorsActivity.WorkflowTaskListId>
    </p2:SetTaskPredecessorsActivity>
    <sads:DebugSymbol.Symbol>d2xDOlxnaXRcUG5QUGFvbG9QaWFcU2FtcGxlc1xXb3JrZmxvdy5BY3Rpdml0aWVzXFdvcmtmbG93LkFjdGl2aXRpZXNcU2FtcGxlVGFza3NXaXRoUHJlZGVjZXNzb3JzXFdvcmtmbG93LnhhbWxmLQPmAQ4CAQE5BT8nAwH9AUAFRhcDAfIBRwVsFAMBvgFtBZIBFAMBigGTAQW4ARQCAVa5AQW/ARoCAUvAAQXJARcCATbKAQXTARcCASHUAQXkASYCAQI8CzxbAwH/ATmWATmnAQMB/gFDC0NZAwHzAUdcR7kCAwHxAUeVB0eiBwMB8AFH2gpH3QoDAe8BR/YCR6MFAwHuAUfiC0fpCwMB7QFUC1YpAwHsAUe0Bke3BgMB6wFHgAxHhwwDAeoBR/YKR/0KAwHpAU8LT14DAd8BR9wFR+cFAwHeAUeQC0eWCwMB3QFbC10pAwHcAUeeCkesCgMB2wFiC2QpAwHaAUedC0euCwMB2QFHtAdHiQoDAdgBR/YFR6AGAwHXAUoLSlMDAc0BaQtpWQMBwwFHxQtHzAsDAcIBR9ECR+ACAwHBAUe8BUfLBQMBwAFHwwpHxgoDAb8BbVxtuQIDAb0BbZUHbaIHAwG8AW3aCm3dCgMBuwFt9gJtowUDAboBbeILbekLAwG5AXoLfCkDAbgBbbQGbbcGAwG3AW2ADG2HDAMBtgFt9gpt/QoDAbUBdQt1XgMBqwFt3AVt5wUDAaoBbZALbZYLAwGpAYEBC4MBKQMBqAFtngptrAoDAacBiAELigEpAwGmAW2dC22uCwMBpQFttAdtiQoDAaQBbfYFbaAGAwGjAXALcFMDAZkBjwELjwFZAwGPAW3FC23MCwMBjgFt0QJt4AIDAY0BbbwFbcsFAwGMAW3DCm3GCgMBiwGTAVyTAbkCAwGJAZMBlQeTAaIHAwGIAZMB2gqTAd0KAwGHAZMB9gKTAaMFAwGGAZMB4guTAekLAwGFAaABC6IBKQMBhAGTAbQGkwG3BgMBgwGTAYAMkwGHDAMBggGTAfYKkwH9CgMBgQGbAQubAWACAXeTAdwFkwHnBQIBdpMBkAuTAZYLAgF1pwELqQEpAgF0kwGeCpMBrAoCAXOuAQuwASkCAXKTAZ0LkwGuCwIBcZMBtAeTAYkKAgFwkwH2BZMBoAYCAW+WAQuWAVMCAWW1AQu1AVsCAVuTAcULkwHMCwIBWpMB0QKTAeACAgFZkwG8BZMBywUCAViTAcMKkwHGCgIBV7wBC7wBcwIBTMcBCccBagIBQcMBC8MBUQIBN9EBCdEBagIBLM0BC80BUQIBIuEBC+EBUQIBF9cBC9cBbAIBDdwBC9wBUwIBA1UNVSMEAewBAVwNXCUEAdwBAWMNYyMEAdoBAXsNeyMEAbgBAYIBDYIBJQQBqAEBiQENiQEjBAGmAQGhAQ2hASMEAYQBAagBDagBJQMBdAGvAQ2vASMDAXIB</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LookupWorkflowContextProperty_1" sap:VirtualizedContainerService.HintSize="200,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="Initiator" Value="InitiatorUserId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetTaskListId_1" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="SingleTask_1" sap:VirtualizedContainerService.HintSize="200,89" />
      <sap2010:ViewStateData Id="SingleTask_2" sap:VirtualizedContainerService.HintSize="200,89" />
      <sap2010:ViewStateData Id="SingleTask_3" sap:VirtualizedContainerService.HintSize="200,89" />
      <sap2010:ViewStateData Id="BuildCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetTaskPredecessorsActivity_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="222,935">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Workflow.Activities.Sample_Tasks_With_Predecessors.Workflow_1" sap:VirtualizedContainerService.HintSize="262,1015" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>